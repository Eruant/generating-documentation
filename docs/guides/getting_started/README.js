Ext.data.JsonP.getting_started({"guide":"<h1>Getting started</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/getting_started-section-1'>Setting up your machine</a></li>\n<li><a href='#!/guide/getting_started-section-2'>File structure</a></li>\n<li><a href='#!/guide/getting_started-section-3'>Generating the guide</a></li>\n</ol>\n</div>\n\n<p>This guide should help to to get started creating your documentation. For more information about writing your documentation see <a href=\"https://github.com/senchalabs/jsduck\">JSDuck's</a> webpage.</p>\n\n<h2 id='getting_started-section-1'>Setting up your machine</h2>\n\n<p>If you have ruby installed on your machine, you can simply install JSDuck with the following command</p>\n\n<pre><code>$ [sudo] gem install jsduck\n</code></pre>\n\n<p>If you run into issues, see the installation instructions on <a href=\"https://github.com/senchalabs/jsduck\">JSDuck's</a> webpage.</p>\n\n<h2 id='getting_started-section-2'>File structure</h2>\n\n<p>How you organise your files is up to you for the most part. The guides will need to be written in a specific way.</p>\n\n<p>Here is a good starting point for you to organise your code.</p>\n\n<pre><code>src/\n  guides.json\n  guides/\n    getting_started/\n      README.md\n      icon.png\n  js/\n    classes/\n      Person.js\n</code></pre>\n\n<h2 id='getting_started-section-3'>Generating the guide</h2>\n\n<p>To generate the documentation, all you need to do is call the JSDuck command.</p>\n\n<p>In the following example I've used the file stucture mentioned above. I've also added options to output the guides, if you are not using guides this option is not required.</p>\n\n<pre><code>$ jsduck src/js/ --title \"Creating Documentation\" --guides src/guides.json --output docs\n</code></pre>\n","title":"Getting started"});